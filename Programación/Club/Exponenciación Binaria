Exponenciación Binaria

	(x^y)%m

	acum=x
	res=1
	for(bit_menosSignificativo, bit_masSignificativo){
		if(bit_prendido)
			res=res*acum;
		acum=acum*acum;
	}

Propiedades modulares

	(a+b)%m = (a%m+b%m)%m
	(a-b)%m = (a%m-b%m+m)%m
	(a*b)%m = (a%m*b%m)%m
	
	acum=x
	res=1
	for(bit_menosSignificativo, bit_masSignificativo){
		if(bit_prendido)
			res=(res*acum)%m;
		acum=(acum*acum)%m;
	}

Implementación
	
	int power(int x, int y, int m){
		int ans=1;
		while(y>0){
			if(y&1)
				ans = (ans*x)%m;
			y>>1;
		}
		return ans;
	}

	int poer(int x, int y, int m){
		if(y==0)
			return 1;
		if(y&1)
			return (power((x*x)%m,y>>1,m)*x)%m;
		else 
			return power
	}

	int power(int x, int y, int m){
		if(y==0)
			return 1;
		return (power((x*x)%m,y>>1,m)*(y&1?x*1))%m;
	}